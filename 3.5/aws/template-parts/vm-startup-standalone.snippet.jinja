{#
 # Startup script.
 # Unfortunately cloudformation requires that this be JSON, which greatly
 # complicates the syntax and readability.  This JSON is just an array of 
 # string lines in the file, which get joined by the main template.
 #}
[
"#!/bin/bash\n",
"#\n",
"# This script starts at the launch of a VM, and handles final cluster coordination.\n",
"LOGFILE=/home/ubuntu/setup.log\n",
"echo `date` 'Preparing Standalone Neo4j Node' | tee -a $LOGFILE\n",
"\n",
"/bin/systemctl stop neo4j.service 2>&1 | tee -a $LOGFILE\n",
"export API=http://169.254.169.254/latest/\n",
"export EC2_AVAIL_ZONE=$(curl --silent $API/meta-data/placement/availability-zone)\n",
"export EC2_INSTANCE_ID=$(curl -s $API/meta-data/instance-id)\n",
"export EC2_REGION=$(curl -s $API/dynamic/instance-identity/document | jq -r .region)\n",
"export ROOT_DISK_ID=$(aws ec2 describe-volumes --filters Name=attachment.instance-id,Values=${EC2_INSTANCE_ID} Name=attachment.device,Values=/dev/sda1 --query 'Volumes[*].[VolumeId]' --region=${EC2_REGION} --out text | cut -f 1)\n",
"env | tee -a $LOGFILE\n",
"# Tag volumes, which CloudFormation does not allow\n",
"# Root volume: /dev/sda, data volume /dev/sdb\n",
"aws ec2 create-tags --resources $ROOT_DISK_ID --tags Key=Name,Value=\"Root Volume $EC2_INSTANCE_ID\" --region ${EC2_REGION} 2>&1 | tee -a $LOGFILE\n",
"echo `date` 'Preparing neo4j service...' | tee -a $LOGFILE\n", 
"/bin/rm -rf /var/lib/neo4j/data/databases/graph.db/ 2>&1 | tee -a $LOGFILE\n",
"/bin/systemctl start neo4j.service 2>&1 | tee -a $LOGFILE\n",
"\n",
"# Loop waiting for neo4j service to start.\n",
"while true; do\n",
"    if curl -s -I http://localhost:7474 | grep '200 OK'; then\n",
"        echo `date` 'Neo4j is up; changing default password' 2>&1 | tee -a $LOGFILE\n",
"\n",
"        curl -v -H 'Content-Type: application/json' \\n",
"                -XPOST -d '{\"password\":\"", { "Ref": "Password" }, "\"}' \\\n",
"                -u neo4j:neo4j \\\n",
"                http://localhost:7474/user/neo4j/password \\\n",
"                2>&1 | tee -a $LOGFILE\n",
"        echo `date` 'Password reset; a graph user is you!' 2>&1 | tee -a $LOGFILE\n",
"\n",
"        echo `date` 'Startup complete ' | tee -a $LOGFILE\n",
"        break\n",
"    fi\n",
"\n",
"    echo `date` 'Waiting for neo4j to come up' 2>&1 | tee -a $LOGFILE\n",
"    sleep 1\n",
"done"
]