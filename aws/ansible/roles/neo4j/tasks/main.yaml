#- name: Update apt cache
#  apt:
#    update_cache: 'yes'

-
- name: Installing tools
  apt:
    name: ['aptitude', 'jq', 'awscli', 'python', 'python-setuptools']
    state: present

#- name: Preserve hostname
#  ansible.builtin.lineinfile:
#    path: /etc/cloud/cloud.cfg
#    regexp: 'preserve_hostname: false'
#    line: 'preserve_hostname: true'
- name: ACCEPT license agreement
  ansible.builtin.debconf:
    name: neo4j-enterprise
    question: neo4j/question
    value: I ACCEPT
    vtype: select
  when: neo4j_edition == "enterprise"

- name: Add an Apt signing key
  ansible.builtin.apt_key:
    url: https://debian.neo4j.com/neotechnology.gpg.key
    state: present

- name: Add Neo4j repository into sources list
  ansible.builtin.apt_repository:
    repo: deb https://debian.neo4j.com stable latest
    state: present

- name: Add Universe repository into sources list
  ansible.builtin.apt_repository:
    repo: deb http://archive.canonical.com/ubuntu bionic universe
    state: present

- name: Add Openjdk repository into sources list
  ansible.builtin.apt_repository:
    repo: ppa:openjdk-r/ppa
    state: present

- name: Update apt cache
  apt:
    update_cache: 'yes'

- name: Upgrade all packages to the latest version
  apt:
    name: '*'
    state: 'latest'
    force_apt_get: 'yes'
    dpkg_options: 'force-confold,force-confdef'

#TODO: Parametrize version
- name: Installing Neo4j Community
  apt:
    name: ['neo4j']
    state: present
  when: neo4j_edition == "community"

- name: Installing Neo4j Enterprise
  apt:
    name: ['neo4j-enterprise']
    state: present
  when: neo4j_edition == "enterprise"

- name: Make sure a service is running
  ansible.builtin.systemd:
    state: started
    name: neo4j
    enabled: yes

- name: Copy community conf file
  copy:
    src: neo4j-community.conf
    dest: /etc/neo4j/neo4j.template
    owner: neo4j
    group: neo4j
    mode: '0644'
  when: neo4j_edition == "community"

- name: Copy enterprise conf file
  copy:
    src: neo4j.conf
    dest: /etc/neo4j/neo4j.template
    owner: neo4j
    group: neo4j
    mode: '0644'
  when: neo4j_edition == "enterprise"

- name: Copy scripts
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    mode:  "{{ item.md }}"
  loop:
    - { src: licensing,      dst: /var/lib/neo4j/licensing, md: '0755' }
    - { src: pre-neo4j.sh, dst: /etc/neo4j/pre-neo4j.sh, md: '0755' }
    - { src: neo4j.service, dst: /etc/systemd/system/neo4j.service, md: '0644' }
#    - { src: reset-password-aws.sh, dst: /etc/neo4j/reset-password-aws.sh,  md: '0755'}

- name: Just force systemd to reread configs (2.4 and above)
  ansible.builtin.systemd:
    daemon_reload: yes

- name: download APOC
  get_url:
    url: https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/4.3.0.0/apoc-4.3.0.0-all.jar
    dest: /var/lib/neo4j/plugins/apoc-4.3.0.0-all.jar
  when: neo4j_edition == "community"